# Publish binaries

name: Publish binaries

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
      - name: Cache Go modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run tests
        run: |
          cd src
          go mod tidy
          go test -v ./...
      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        if: success() && startsWith(github.ref, 'refs/tags/')
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download EnVar plugin for NSIS
        uses: carlosperate/download-file-action@v1.0.3
        with:
          file-url: https://nsis.sourceforge.io/mediawiki/images/7/7f/EnVar_plugin.zip
          file-name: envar_plugin.zip
          location: ${{ github.workspace }}
      - name: Extract EnVar plugin
        run: 7z x -o"${{ github.workspace }}/NSIS_Plugins" "${{ github.workspace }}/envar_plugin.zip"
      - name: Install makensis
        run: sudo apt-get update && sudo apt-get install -y nsis nsis-pluginapi
      - name: Set plugin permissions
        run: sudo chown -R $(whoami) /usr/share/nsis/Plugins/
      - name: Create NSIS installer - amd64
        uses: joncloud/makensis-action@v3.4
        with:
          additional-plugin-paths: ${{ github.workspace }}/NSIS_Plugins/Plugins
        env:
          VERSION: ${{ github.event.release.tag_name }}
          ARCH: amd64
      - name: Upload NSIS installer - amd64
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: compose-generator.exe
          asset_name: ComposeGenerator_${{ github.event.release.tag_name }}_x64_Setup.exe
          tag: ${{ github.ref }}
      - name: Create NSIS installer - i386
        uses: joncloud/makensis-action@v3.4
        with:
          additional-plugin-paths: ${{ github.workspace }}/NSIS_Plugins/Plugins
        env:
          VERSION: ${{ github.event.release.tag_name }}
          ARCH: 386
      - name: Upload NSIS installer - i386
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: compose-generator.exe
          asset_name: ComposeGenerator_${{ github.event.release.tag_name }}_x86_Setup.exe
          tag: ${{ github.ref }}